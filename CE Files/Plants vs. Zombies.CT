<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Unlimited Suns"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

originalcode:
//add eax,[edx+00005578]

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [edx+00005578], (int)999
mov eax,[edx+00005578]

exit:
jmp returnhere

"PlantsVsZombies.exe"+1E885:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"PlantsVsZombies.exe"+1E885:
db 03 82 78 55 00 00
//add eax,[edx+00005578]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Instant Replant"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

mov [edi+24], (int)500000

originalcode:
//inc [edi+24]
mov eax,[edi+24]

exit:
jmp returnhere

"PlantsVsZombies.exe"+91E4C:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"PlantsVsZombies.exe"+91E4C:
db FF 47 24 8B 47 24
//inc [edi+24]
//mov eax,[edi+24]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Unlimited Coins"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [ecx+50], (int)9999999
mov eax,[ecx+50]
lea edi,[esp+2C]

exit:
jmp returnhere

"PlantsVsZombies.exe"+1CEA4:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"PlantsVsZombies.exe"+1CEA4:
db 8B 41 50 8D 7C 24 2C
//mov eax,[ecx+50]
//lea edi,[esp+2C]
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Suns Count Accessor :add eax,[edx+00005578]</Description>
      <AddressString>PlantsVsZombies.exe+1E885</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>CB</Byte>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>03</Byte>
        <Byte>82</Byte>
        <Byte>78</Byte>
        <Byte>55</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>39</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Replant Timer Accessor (value 50000) :inc [edi+24]</Description>
      <AddressString>PlantsVsZombies.exe+91E4C</AddressString>
      <Before>
        <Byte>7F</Byte>
        <Byte>49</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
        <Byte>1F</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>47</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>24</Byte>
        <Byte>3B</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Coin Accessor :mov eax,[ecx+50]</Description>
      <AddressString>PlantsVsZombies.exe+1CEA4</AddressString>
      <Before>
        <Byte>88</Byte>
        <Byte>4C</Byte>
        <Byte>09</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>50</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>2C</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
