<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Unlimited PowerPlays"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Split/Second
  Version: 
  Date   : 2025-05-18
  Author : gmastergreatee

  This script does blah blah blah
}

define(address,"SplitSecond.exe"+C688B)
define(bytes,F3 0F 2C 7E 08)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+08],(float)100
  cvttss2si edi,[esi+08]
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // cvttss2si edi,[esi+08]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: SplitSecond.exe+C688B

SplitSecond.exe+C685F: 80 7E 04 00        - cmp byte ptr [esi+04],00
SplitSecond.exe+C6863: 89 5C 24 14        - mov [esp+14],ebx
SplitSecond.exe+C6867: 89 74 24 08        - mov [esp+08],esi
SplitSecond.exe+C686B: 0F 84 71 01 00 00  - je SplitSecond.exe+C69E2
SplitSecond.exe+C6871: 8B 0D F8 5F D6 00  - mov ecx,[SplitSecond.exe+965FF8]
SplitSecond.exe+C6877: 81 C1 30 01 00 00  - add ecx,00000130
SplitSecond.exe+C687D: E8 8E 73 30 00     - call SplitSecond.exe+3CDC10
SplitSecond.exe+C6882: 84 C0              - test al,al
SplitSecond.exe+C6884: 0F 84 58 01 00 00  - je SplitSecond.exe+C69E2
SplitSecond.exe+C688A: 57                 - push edi
// ---------- INJECTING HERE ----------
SplitSecond.exe+C688B: F3 0F 2C 7E 08     - cvttss2si edi,[esi+08]
// ---------- DONE INJECTING  ----------
SplitSecond.exe+C6890: 39 7B 1C           - cmp [ebx+1C],edi
SplitSecond.exe+C6893: 8B 5C 24 14        - mov ebx,[esp+14]
SplitSecond.exe+C6897: 0F 84 21 01 00 00  - je SplitSecond.exe+C69BE
SplitSecond.exe+C689D: 8B 0D F8 5F D6 00  - mov ecx,[SplitSecond.exe+965FF8]
SplitSecond.exe+C68A3: 55                 - push ebp
SplitSecond.exe+C68A4: 6A 01              - push 01
SplitSecond.exe+C68A6: E8 D5 AA 2C 00     - call SplitSecond.exe+391380
SplitSecond.exe+C68AB: 8B 0D F8 5F D6 00  - mov ecx,[SplitSecond.exe+965FF8]
SplitSecond.exe+C68B1: 6A 02              - push 02
SplitSecond.exe+C68B3: 8B E8              - mov ebp,eax
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>49</Key>
          </Keys>
          <ID>0</ID>
          <ActivateSound TTS="EN">Activated</ActivateSound>
          <DeactivateSound TTS="EN">Deactivated</DeactivateSound>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Max Demolition Score"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Split/Second
  Version: 
  Date   : 2025-05-18
  Author : gmastergreatee

  This script does blah blah blah
}

define(address,"SplitSecond.exe"+3B0108)
define(bytes,F3 0F 2C 46 10)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+10],(float)9999999
  cvttss2si eax,[esi+10]
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // cvttss2si eax,[esi+10]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: SplitSecond.exe+3B0108

SplitSecond.exe+3B00EE: 72 E1           - jb SplitSecond.exe+3B00D1
SplitSecond.exe+3B00F0: D9 44 24 18     - fld dword ptr [esp+18]
SplitSecond.exe+3B00F4: 53              - push ebx
SplitSecond.exe+3B00F5: 51              - push ecx
SplitSecond.exe+3B00F6: 8B 4E 0C        - mov ecx,[esi+0C]
SplitSecond.exe+3B00F9: D9 1C 24        - fstp dword ptr [esp]
SplitSecond.exe+3B00FC: E8 DF 2E 07 00  - call SplitSecond.exe+422FE0
SplitSecond.exe+3B0101: 5D              - pop ebp
SplitSecond.exe+3B0102: D9 46 14        - fld dword ptr [esi+14]
SplitSecond.exe+3B0105: D9 5F 68        - fstp dword ptr [edi+68]
// ---------- INJECTING HERE ----------
SplitSecond.exe+3B0108: F3 0F 2C 46 10  - cvttss2si eax,[esi+10]
// ---------- DONE INJECTING  ----------
SplitSecond.exe+3B010D: 89 47 64        - mov [edi+64],eax
SplitSecond.exe+3B0110: 8B 4E 0C        - mov ecx,[esi+0C]
SplitSecond.exe+3B0113: E8 78 2E 07 00  - call SplitSecond.exe+422F90
SplitSecond.exe+3B0118: E8 C3 66 FA FF  - call SplitSecond.exe+3567E0
SplitSecond.exe+3B011D: 89 47 54        - mov [edi+54],eax
SplitSecond.exe+3B0120: 8B 4E 0C        - mov ecx,[esi+0C]
SplitSecond.exe+3B0123: E8 A8 2F 07 00  - call SplitSecond.exe+4230D0
SplitSecond.exe+3B0128: 89 47 58        - mov [edi+58],eax
SplitSecond.exe+3B012B: 8B 4E 0C        - mov ecx,[esi+0C]
SplitSecond.exe+3B012E: 8B 41 0C        - mov eax,[ecx+0C]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>50</Key>
          </Keys>
          <ID>0</ID>
          <ActivateSound TTS="EN">Activated</ActivateSound>
          <DeactivateSound TTS="EN">Deactivated</DeactivateSound>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Set demolition time to 1 sec"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Split/Second
  Version: 
  Date   : 2025-06-07
  Author : gmastergreatee

  This script does blah blah blah
}

define(address,"SplitSecond.exe"+29731)
define(bytes,D9 5E 0C D9 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fstp dword ptr [esi+0C]
  mov [esi+0C],(float)1
  fld dword ptr [ecx]
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // fstp dword ptr [esi+0C]
  // fld dword ptr [ecx]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: SplitSecond.exe+29731

SplitSecond.exe+29713: 8B 4C 24 08        - mov ecx,[esp+08]
SplitSecond.exe+29717: F3 0F 10 46 0C     - movss xmm0,[esi+0C]
SplitSecond.exe+2971C: 0F 2E 01           - ucomiss xmm0,[ecx]
SplitSecond.exe+2971F: 9F                 - lahf 
SplitSecond.exe+29720: F6 C4 44           - test ah,44
SplitSecond.exe+29723: 7A 06              - jp SplitSecond.exe+2972B
SplitSecond.exe+29725: 80 7E 08 00        - cmp byte ptr [esi+08],00
SplitSecond.exe+29729: 75 04              - jne SplitSecond.exe+2972F
SplitSecond.exe+2972B: C6 46 09 01        - mov byte ptr [esi+09],01
SplitSecond.exe+2972F: D9 01              - fld dword ptr [ecx]
// ---------- INJECTING HERE ----------
SplitSecond.exe+29731: D9 5E 0C           - fstp dword ptr [esi+0C]
// ---------- DONE INJECTING  ----------
SplitSecond.exe+29734: D9 01              - fld dword ptr [ecx]
SplitSecond.exe+29736: D8 0D 84 3C BC 00  - fmul dword ptr [SplitSecond.exe+7C3C84]
SplitSecond.exe+2973C: E8 D5 D0 32 00     - call SplitSecond.exe+356816
SplitSecond.exe+29741: 89 46 10           - mov [esi+10],eax
SplitSecond.exe+29744: 89 56 14           - mov [esi+14],edx
SplitSecond.exe+29747: C6 46 08 01        - mov byte ptr [esi+08],01
SplitSecond.exe+2974B: 8B C6              - mov eax,esi
SplitSecond.exe+2974D: 5E                 - pop esi
SplitSecond.exe+2974E: C2 04 00           - ret 0004
SplitSecond.exe+29751: CC                 - int 3 
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>51</Key>
          </Keys>
          <ID>0</ID>
          <ActivateSound TTS="EN">Activated</ActivateSound>
          <DeactivateSound TTS="EN">Deactivated</DeactivateSound>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Powerplay Meter accessor :cvttss2si edi,[esi+08]</Description>
      <AddressString>SplitSecond.exe+C688B</AddressString>
      <Before>
        <Byte>58</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>57</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2C</Byte>
        <Byte>7E</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>39</Byte>
        <Byte>7B</Byte>
        <Byte>1C</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Demolition Score accessor :cvttss2si eax,[esi+10]</Description>
      <AddressString>SplitSecond.exe+3B0108</AddressString>
      <Before>
        <Byte>46</Byte>
        <Byte>14</Byte>
        <Byte>D9</Byte>
        <Byte>5F</Byte>
        <Byte>68</Byte>
      </Before>
      <Actual>
        <Byte>CC</Byte>
        <Byte>0F</Byte>
        <Byte>2C</Byte>
        <Byte>46</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>64</Byte>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Timer Decreaser :movss [esi+08],xmm1</Description>
      <AddressString>SplitSecond.exe+46A74</AddressString>
      <Before>
        <Byte>08</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4E</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>80</Byte>
        <Byte>7E</Byte>
        <Byte>51</Byte>
        <Byte>00</Byte>
        <Byte>53</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
